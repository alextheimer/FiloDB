// Generated from PromQL.g4 by ANTLR 4.9
package filodb.prometheus.antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class PromQLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, NUMBER=9, 
		STRING=10, ADD=11, SUB=12, MUL=13, DIV=14, MOD=15, POW=16, EQ=17, DEQ=18, 
		NE=19, GT=20, LT=21, GE=22, LE=23, RE=24, NRE=25, AT=26, AND=27, OR=28, 
		UNLESS=29, BY=30, WITHOUT=31, ON=32, IGNORING=33, GROUP_LEFT=34, GROUP_RIGHT=35, 
		OFFSET=36, LIMIT=37, BOOL=38, AGGREGATION_OP=39, DURATION=40, IDENTIFIER=41, 
		IDENTIFIER_EXTENDED=42, WS=43, COMMENT=44;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "NUMBER", 
			"STRING", "ADD", "SUB", "MUL", "DIV", "MOD", "POW", "EQ", "DEQ", "NE", 
			"GT", "LT", "GE", "LE", "RE", "NRE", "AT", "AND", "OR", "UNLESS", "BY", 
			"WITHOUT", "ON", "IGNORING", "GROUP_LEFT", "GROUP_RIGHT", "OFFSET", "LIMIT", 
			"BOOL", "AGGREGATION_OP", "DURATION", "IDENTIFIER", "IDENTIFIER_EXTENDED", 
			"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
			"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "WS", "COMMENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'('", "')'", "'{'", "'}'", "'['", "']'", "':'", "','", null, null, 
			"'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "'='", "'=='", "'!='", "'>'", 
			"'<'", "'>='", "'<='", "'=~'", "'!~'", "'@'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, "NUMBER", "STRING", 
			"ADD", "SUB", "MUL", "DIV", "MOD", "POW", "EQ", "DEQ", "NE", "GT", "LT", 
			"GE", "LE", "RE", "NRE", "AT", "AND", "OR", "UNLESS", "BY", "WITHOUT", 
			"ON", "IGNORING", "GROUP_LEFT", "GROUP_RIGHT", "OFFSET", "LIMIT", "BOOL", 
			"AGGREGATION_OP", "DURATION", "IDENTIFIER", "IDENTIFIER_EXTENDED", "WS", 
			"COMMENT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public PromQLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "PromQL.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2.\u0201\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\3\2\3\2\3"+
		"\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\7\n\u00a1\n"+
		"\n\f\n\16\n\u00a4\13\n\3\n\5\n\u00a7\n\n\3\n\6\n\u00aa\n\n\r\n\16\n\u00ab"+
		"\3\n\3\n\5\n\u00b0\n\n\3\n\6\n\u00b3\n\n\r\n\16\n\u00b4\5\n\u00b7\n\n"+
		"\3\n\6\n\u00ba\n\n\r\n\16\n\u00bb\3\n\3\n\3\n\3\n\6\n\u00c2\n\n\r\n\16"+
		"\n\u00c3\5\n\u00c6\n\n\3\13\3\13\3\13\3\13\7\13\u00cc\n\13\f\13\16\13"+
		"\u00cf\13\13\3\13\3\13\3\13\3\13\3\13\7\13\u00d6\n\13\f\13\16\13\u00d9"+
		"\13\13\3\13\5\13\u00dc\n\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3"+
		"\20\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\26\3"+
		"\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3"+
		"\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3"+
		"\36\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3\"\3\"\3\"\3\"\3"+
		"\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$"+
		"\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'"+
		"\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3"+
		"(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3"+
		"(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3"+
		"(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\5(\u01a5\n(\3)\3)\3"+
		")\3*\3*\7*\u01ac\n*\f*\16*\u01af\13*\3+\7+\u01b2\n+\f+\16+\u01b5\13+\3"+
		"+\3+\7+\u01b9\n+\f+\16+\u01bc\13+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3"+
		"\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\3"+
		"8\38\39\39\3:\3:\3;\3;\3<\3<\3=\3=\3>\3>\3?\3?\3@\3@\3A\3A\3B\3B\3C\3"+
		"C\3D\3D\3E\3E\3F\6F\u01f3\nF\rF\16F\u01f4\3F\3F\3G\3G\7G\u01fb\nG\fG\16"+
		"G\u01fe\13G\3G\3G\2\2H\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27"+
		"\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33"+
		"\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W\2Y\2[\2]\2_\2a\2c\2"+
		"e\2g\2i\2k\2m\2o\2q\2s\2u\2w\2y\2{\2}\2\177\2\u0081\2\u0083\2\u0085\2"+
		"\u0087\2\u0089\2\u008b-\u008d.\3\2)\3\2\62;\4\2GGgg\4\2--//\4\2ZZzz\5"+
		"\2\62;CHch\4\2))^^\4\2$$^^\b\2ffjkoouuyy{{\5\2C\\aac|\6\2\62;C\\aac|\4"+
		"\2<<aa\4\2C\\c|\7\2/\60\62<C\\aac|\4\2CCcc\4\2DDdd\4\2EEee\4\2FFff\4\2"+
		"HHhh\4\2IIii\4\2JJjj\4\2KKkk\4\2LLll\4\2MMmm\4\2NNnn\4\2OOoo\4\2PPpp\4"+
		"\2QQqq\4\2RRrr\4\2SSss\4\2TTtt\4\2UUuu\4\2VVvv\4\2WWww\4\2XXxx\4\2YYy"+
		"y\4\2[[{{\4\2\\\\||\5\2\13\f\17\17\"\"\4\2\f\f\17\17\2\u0206\2\3\3\2\2"+
		"\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3"+
		"\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2"+
		"\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2"+
		"\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2"+
		"\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3"+
		"\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2"+
		"\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2"+
		"\u008b\3\2\2\2\2\u008d\3\2\2\2\3\u008f\3\2\2\2\5\u0091\3\2\2\2\7\u0093"+
		"\3\2\2\2\t\u0095\3\2\2\2\13\u0097\3\2\2\2\r\u0099\3\2\2\2\17\u009b\3\2"+
		"\2\2\21\u009d\3\2\2\2\23\u00c5\3\2\2\2\25\u00db\3\2\2\2\27\u00dd\3\2\2"+
		"\2\31\u00df\3\2\2\2\33\u00e1\3\2\2\2\35\u00e3\3\2\2\2\37\u00e5\3\2\2\2"+
		"!\u00e7\3\2\2\2#\u00e9\3\2\2\2%\u00eb\3\2\2\2\'\u00ee\3\2\2\2)\u00f1\3"+
		"\2\2\2+\u00f3\3\2\2\2-\u00f5\3\2\2\2/\u00f8\3\2\2\2\61\u00fb\3\2\2\2\63"+
		"\u00fe\3\2\2\2\65\u0101\3\2\2\2\67\u0103\3\2\2\29\u0107\3\2\2\2;\u010a"+
		"\3\2\2\2=\u0111\3\2\2\2?\u0114\3\2\2\2A\u011c\3\2\2\2C\u011f\3\2\2\2E"+
		"\u0128\3\2\2\2G\u0133\3\2\2\2I\u013f\3\2\2\2K\u0146\3\2\2\2M\u014c\3\2"+
		"\2\2O\u01a4\3\2\2\2Q\u01a6\3\2\2\2S\u01a9\3\2\2\2U\u01b3\3\2\2\2W\u01bd"+
		"\3\2\2\2Y\u01bf\3\2\2\2[\u01c1\3\2\2\2]\u01c3\3\2\2\2_\u01c5\3\2\2\2a"+
		"\u01c7\3\2\2\2c\u01c9\3\2\2\2e\u01cb\3\2\2\2g\u01cd\3\2\2\2i\u01cf\3\2"+
		"\2\2k\u01d1\3\2\2\2m\u01d3\3\2\2\2o\u01d5\3\2\2\2q\u01d7\3\2\2\2s\u01d9"+
		"\3\2\2\2u\u01db\3\2\2\2w\u01dd\3\2\2\2y\u01df\3\2\2\2{\u01e1\3\2\2\2}"+
		"\u01e3\3\2\2\2\177\u01e5\3\2\2\2\u0081\u01e7\3\2\2\2\u0083\u01e9\3\2\2"+
		"\2\u0085\u01eb\3\2\2\2\u0087\u01ed\3\2\2\2\u0089\u01ef\3\2\2\2\u008b\u01f2"+
		"\3\2\2\2\u008d\u01f8\3\2\2\2\u008f\u0090\7*\2\2\u0090\4\3\2\2\2\u0091"+
		"\u0092\7+\2\2\u0092\6\3\2\2\2\u0093\u0094\7}\2\2\u0094\b\3\2\2\2\u0095"+
		"\u0096\7\177\2\2\u0096\n\3\2\2\2\u0097\u0098\7]\2\2\u0098\f\3\2\2\2\u0099"+
		"\u009a\7_\2\2\u009a\16\3\2\2\2\u009b\u009c\7<\2\2\u009c\20\3\2\2\2\u009d"+
		"\u009e\7.\2\2\u009e\22\3\2\2\2\u009f\u00a1\t\2\2\2\u00a0\u009f\3\2\2\2"+
		"\u00a1\u00a4\3\2\2\2\u00a2\u00a0\3\2\2\2\u00a2\u00a3\3\2\2\2\u00a3\u00a6"+
		"\3\2\2\2\u00a4\u00a2\3\2\2\2\u00a5\u00a7\7\60\2\2\u00a6\u00a5\3\2\2\2"+
		"\u00a6\u00a7\3\2\2\2\u00a7\u00a9\3\2\2\2\u00a8\u00aa\t\2\2\2\u00a9\u00a8"+
		"\3\2\2\2\u00aa\u00ab\3\2\2\2\u00ab\u00a9\3\2\2\2\u00ab\u00ac\3\2\2\2\u00ac"+
		"\u00b6\3\2\2\2\u00ad\u00af\t\3\2\2\u00ae\u00b0\t\4\2\2\u00af\u00ae\3\2"+
		"\2\2\u00af\u00b0\3\2\2\2\u00b0\u00b2\3\2\2\2\u00b1\u00b3\t\2\2\2\u00b2"+
		"\u00b1\3\2\2\2\u00b3\u00b4\3\2\2\2\u00b4\u00b2\3\2\2\2\u00b4\u00b5\3\2"+
		"\2\2\u00b5\u00b7\3\2\2\2\u00b6\u00ad\3\2\2\2\u00b6\u00b7\3\2\2\2\u00b7"+
		"\u00c6\3\2\2\2\u00b8\u00ba\t\2\2\2\u00b9\u00b8\3\2\2\2\u00ba\u00bb\3\2"+
		"\2\2\u00bb\u00b9\3\2\2\2\u00bb\u00bc\3\2\2\2\u00bc\u00bd\3\2\2\2\u00bd"+
		"\u00c6\7\60\2\2\u00be\u00bf\7\62\2\2\u00bf\u00c1\t\5\2\2\u00c0\u00c2\t"+
		"\6\2\2\u00c1\u00c0\3\2\2\2\u00c2\u00c3\3\2\2\2\u00c3\u00c1\3\2\2\2\u00c3"+
		"\u00c4\3\2\2\2\u00c4\u00c6\3\2\2\2\u00c5\u00a2\3\2\2\2\u00c5\u00b9\3\2"+
		"\2\2\u00c5\u00be\3\2\2\2\u00c6\24\3\2\2\2\u00c7\u00cd\7)\2\2\u00c8\u00cc"+
		"\n\7\2\2\u00c9\u00ca\7^\2\2\u00ca\u00cc\13\2\2\2\u00cb\u00c8\3\2\2\2\u00cb"+
		"\u00c9\3\2\2\2\u00cc\u00cf\3\2\2\2\u00cd\u00cb\3\2\2\2\u00cd\u00ce\3\2"+
		"\2\2\u00ce\u00d0\3\2\2\2\u00cf\u00cd\3\2\2\2\u00d0\u00dc\7)\2\2\u00d1"+
		"\u00d7\7$\2\2\u00d2\u00d6\n\b\2\2\u00d3\u00d4\7^\2\2\u00d4\u00d6\13\2"+
		"\2\2\u00d5\u00d2\3\2\2\2\u00d5\u00d3\3\2\2\2\u00d6\u00d9\3\2\2\2\u00d7"+
		"\u00d5\3\2\2\2\u00d7\u00d8\3\2\2\2\u00d8\u00da\3\2\2\2\u00d9\u00d7\3\2"+
		"\2\2\u00da\u00dc\7$\2\2\u00db\u00c7\3\2\2\2\u00db\u00d1\3\2\2\2\u00dc"+
		"\26\3\2\2\2\u00dd\u00de\7-\2\2\u00de\30\3\2\2\2\u00df\u00e0\7/\2\2\u00e0"+
		"\32\3\2\2\2\u00e1\u00e2\7,\2\2\u00e2\34\3\2\2\2\u00e3\u00e4\7\61\2\2\u00e4"+
		"\36\3\2\2\2\u00e5\u00e6\7\'\2\2\u00e6 \3\2\2\2\u00e7\u00e8\7`\2\2\u00e8"+
		"\"\3\2\2\2\u00e9\u00ea\7?\2\2\u00ea$\3\2\2\2\u00eb\u00ec\7?\2\2\u00ec"+
		"\u00ed\7?\2\2\u00ed&\3\2\2\2\u00ee\u00ef\7#\2\2\u00ef\u00f0\7?\2\2\u00f0"+
		"(\3\2\2\2\u00f1\u00f2\7@\2\2\u00f2*\3\2\2\2\u00f3\u00f4\7>\2\2\u00f4,"+
		"\3\2\2\2\u00f5\u00f6\7@\2\2\u00f6\u00f7\7?\2\2\u00f7.\3\2\2\2\u00f8\u00f9"+
		"\7>\2\2\u00f9\u00fa\7?\2\2\u00fa\60\3\2\2\2\u00fb\u00fc\7?\2\2\u00fc\u00fd"+
		"\7\u0080\2\2\u00fd\62\3\2\2\2\u00fe\u00ff\7#\2\2\u00ff\u0100\7\u0080\2"+
		"\2\u0100\64\3\2\2\2\u0101\u0102\7B\2\2\u0102\66\3\2\2\2\u0103\u0104\5"+
		"W,\2\u0104\u0105\5q9\2\u0105\u0106\5]/\2\u01068\3\2\2\2\u0107\u0108\5"+
		"s:\2\u0108\u0109\5y=\2\u0109:\3\2\2\2\u010a\u010b\5\177@\2\u010b\u010c"+
		"\5q9\2\u010c\u010d\5m\67\2\u010d\u010e\5_\60\2\u010e\u010f\5{>\2\u010f"+
		"\u0110\5{>\2\u0110<\3\2\2\2\u0111\u0112\5Y-\2\u0112\u0113\5\u0087D\2\u0113"+
		">\3\2\2\2\u0114\u0115\5\u0083B\2\u0115\u0116\5g\64\2\u0116\u0117\5}?\2"+
		"\u0117\u0118\5e\63\2\u0118\u0119\5s:\2\u0119\u011a\5\177@\2\u011a\u011b"+
		"\5}?\2\u011b@\3\2\2\2\u011c\u011d\5s:\2\u011d\u011e\5q9\2\u011eB\3\2\2"+
		"\2\u011f\u0120\5g\64\2\u0120\u0121\5c\62\2\u0121\u0122\5q9\2\u0122\u0123"+
		"\5s:\2\u0123\u0124\5y=\2\u0124\u0125\5g\64\2\u0125\u0126\5q9\2\u0126\u0127"+
		"\5c\62\2\u0127D\3\2\2\2\u0128\u0129\5c\62\2\u0129\u012a\5y=\2\u012a\u012b"+
		"\5s:\2\u012b\u012c\5\177@\2\u012c\u012d\5u;\2\u012d\u012e\7a\2\2\u012e"+
		"\u012f\5m\67\2\u012f\u0130\5_\60\2\u0130\u0131\5a\61\2\u0131\u0132\5}"+
		"?\2\u0132F\3\2\2\2\u0133\u0134\5c\62\2\u0134\u0135\5y=\2\u0135\u0136\5"+
		"s:\2\u0136\u0137\5\177@\2\u0137\u0138\5u;\2\u0138\u0139\7a\2\2\u0139\u013a"+
		"\5y=\2\u013a\u013b\5g\64\2\u013b\u013c\5c\62\2\u013c\u013d\5e\63\2\u013d"+
		"\u013e\5}?\2\u013eH\3\2\2\2\u013f\u0140\5s:\2\u0140\u0141\5a\61\2\u0141"+
		"\u0142\5a\61\2\u0142\u0143\5{>\2\u0143\u0144\5_\60\2\u0144\u0145\5}?\2"+
		"\u0145J\3\2\2\2\u0146\u0147\5m\67\2\u0147\u0148\5g\64\2\u0148\u0149\5"+
		"o8\2\u0149\u014a\5g\64\2\u014a\u014b\5}?\2\u014bL\3\2\2\2\u014c\u014d"+
		"\5Y-\2\u014d\u014e\5s:\2\u014e\u014f\5s:\2\u014f\u0150\5m\67\2\u0150N"+
		"\3\2\2\2\u0151\u0152\5{>\2\u0152\u0153\5\177@\2\u0153\u0154\5o8\2\u0154"+
		"\u01a5\3\2\2\2\u0155\u0156\5o8\2\u0156\u0157\5g\64\2\u0157\u0158\5q9\2"+
		"\u0158\u01a5\3\2\2\2\u0159\u015a\5o8\2\u015a\u015b\5W,\2\u015b\u015c\5"+
		"\u0085C\2\u015c\u01a5\3\2\2\2\u015d\u015e\5W,\2\u015e\u015f\5\u0081A\2"+
		"\u015f\u0160\5c\62\2\u0160\u01a5\3\2\2\2\u0161\u0162\5c\62\2\u0162\u0163"+
		"\5y=\2\u0163\u0164\5s:\2\u0164\u0165\5\177@\2\u0165\u0166\5u;\2\u0166"+
		"\u01a5\3\2\2\2\u0167\u0168\5{>\2\u0168\u0169\5}?\2\u0169\u016a\5]/\2\u016a"+
		"\u016b\5]/\2\u016b\u016c\5_\60\2\u016c\u016d\5\u0081A\2\u016d\u01a5\3"+
		"\2\2\2\u016e\u016f\5{>\2\u016f\u0170\5}?\2\u0170\u0171\5]/\2\u0171\u0172"+
		"\5\u0081A\2\u0172\u0173\5W,\2\u0173\u0174\5y=\2\u0174\u01a5\3\2\2\2\u0175"+
		"\u0176\5[.\2\u0176\u0177\5s:\2\u0177\u0178\5\177@\2\u0178\u0179\5q9\2"+
		"\u0179\u017a\5}?\2\u017a\u01a5\3\2\2\2\u017b\u017c\5[.\2\u017c\u017d\5"+
		"s:\2\u017d\u017e\5\177@\2\u017e\u017f\5q9\2\u017f\u0180\5}?\2\u0180\u0181"+
		"\7a\2\2\u0181\u0182\5\u0081A\2\u0182\u0183\5W,\2\u0183\u0184\5m\67\2\u0184"+
		"\u0185\5\177@\2\u0185\u0186\5_\60\2\u0186\u0187\5{>\2\u0187\u01a5\3\2"+
		"\2\2\u0188\u0189\5Y-\2\u0189\u018a\5s:\2\u018a\u018b\5}?\2\u018b\u018c"+
		"\5}?\2\u018c\u018d\5s:\2\u018d\u018e\5o8\2\u018e\u018f\5k\66\2\u018f\u01a5"+
		"\3\2\2\2\u0190\u0191\5}?\2\u0191\u0192\5s:\2\u0192\u0193\5u;\2\u0193\u0194"+
		"\5k\66\2\u0194\u01a5\3\2\2\2\u0195\u0196\5w<\2\u0196\u0197\5\177@\2\u0197"+
		"\u0198\5W,\2\u0198\u0199\5q9\2\u0199\u019a\5}?\2\u019a\u019b\5g\64\2\u019b"+
		"\u019c\5m\67\2\u019c\u019d\5_\60\2\u019d\u01a5\3\2\2\2\u019e\u019f\5c"+
		"\62\2\u019f\u01a0\5y=\2\u01a0\u01a1\5s:\2\u01a1\u01a2\5\177@\2\u01a2\u01a3"+
		"\5u;\2\u01a3\u01a5\3\2\2\2\u01a4\u0151\3\2\2\2\u01a4\u0155\3\2\2\2\u01a4"+
		"\u0159\3\2\2\2\u01a4\u015d\3\2\2\2\u01a4\u0161\3\2\2\2\u01a4\u0167\3\2"+
		"\2\2\u01a4\u016e\3\2\2\2\u01a4\u0175\3\2\2\2\u01a4\u017b\3\2\2\2\u01a4"+
		"\u0188\3\2\2\2\u01a4\u0190\3\2\2\2\u01a4\u0195\3\2\2\2\u01a4\u019e\3\2"+
		"\2\2\u01a5P\3\2\2\2\u01a6\u01a7\5\23\n\2\u01a7\u01a8\t\t\2\2\u01a8R\3"+
		"\2\2\2\u01a9\u01ad\t\n\2\2\u01aa\u01ac\t\13\2\2\u01ab\u01aa\3\2\2\2\u01ac"+
		"\u01af\3\2\2\2\u01ad\u01ab\3\2\2\2\u01ad\u01ae\3\2\2\2\u01aeT\3\2\2\2"+
		"\u01af\u01ad\3\2\2\2\u01b0\u01b2\t\f\2\2\u01b1\u01b0\3\2\2\2\u01b2\u01b5"+
		"\3\2\2\2\u01b3\u01b1\3\2\2\2\u01b3\u01b4\3\2\2\2\u01b4\u01b6\3\2\2\2\u01b5"+
		"\u01b3\3\2\2\2\u01b6\u01ba\t\r\2\2\u01b7\u01b9\t\16\2\2\u01b8\u01b7\3"+
		"\2\2\2\u01b9\u01bc\3\2\2\2\u01ba\u01b8\3\2\2\2\u01ba\u01bb\3\2\2\2\u01bb"+
		"V\3\2\2\2\u01bc\u01ba\3\2\2\2\u01bd\u01be\t\17\2\2\u01beX\3\2\2\2\u01bf"+
		"\u01c0\t\20\2\2\u01c0Z\3\2\2\2\u01c1\u01c2\t\21\2\2\u01c2\\\3\2\2\2\u01c3"+
		"\u01c4\t\22\2\2\u01c4^\3\2\2\2\u01c5\u01c6\t\3\2\2\u01c6`\3\2\2\2\u01c7"+
		"\u01c8\t\23\2\2\u01c8b\3\2\2\2\u01c9\u01ca\t\24\2\2\u01cad\3\2\2\2\u01cb"+
		"\u01cc\t\25\2\2\u01ccf\3\2\2\2\u01cd\u01ce\t\26\2\2\u01ceh\3\2\2\2\u01cf"+
		"\u01d0\t\27\2\2\u01d0j\3\2\2\2\u01d1\u01d2\t\30\2\2\u01d2l\3\2\2\2\u01d3"+
		"\u01d4\t\31\2\2\u01d4n\3\2\2\2\u01d5\u01d6\t\32\2\2\u01d6p\3\2\2\2\u01d7"+
		"\u01d8\t\33\2\2\u01d8r\3\2\2\2\u01d9\u01da\t\34\2\2\u01dat\3\2\2\2\u01db"+
		"\u01dc\t\35\2\2\u01dcv\3\2\2\2\u01dd\u01de\t\36\2\2\u01dex\3\2\2\2\u01df"+
		"\u01e0\t\37\2\2\u01e0z\3\2\2\2\u01e1\u01e2\t \2\2\u01e2|\3\2\2\2\u01e3"+
		"\u01e4\t!\2\2\u01e4~\3\2\2\2\u01e5\u01e6\t\"\2\2\u01e6\u0080\3\2\2\2\u01e7"+
		"\u01e8\t#\2\2\u01e8\u0082\3\2\2\2\u01e9\u01ea\t$\2\2\u01ea\u0084\3\2\2"+
		"\2\u01eb\u01ec\t\5\2\2\u01ec\u0086\3\2\2\2\u01ed\u01ee\t%\2\2\u01ee\u0088"+
		"\3\2\2\2\u01ef\u01f0\t&\2\2\u01f0\u008a\3\2\2\2\u01f1\u01f3\t\'\2\2\u01f2"+
		"\u01f1\3\2\2\2\u01f3\u01f4\3\2\2\2\u01f4\u01f2\3\2\2\2\u01f4\u01f5\3\2"+
		"\2\2\u01f5\u01f6\3\2\2\2\u01f6\u01f7\bF\2\2\u01f7\u008c\3\2\2\2\u01f8"+
		"\u01fc\7%\2\2\u01f9\u01fb\n(\2\2\u01fa\u01f9\3\2\2\2\u01fb\u01fe\3\2\2"+
		"\2\u01fc\u01fa\3\2\2\2\u01fc\u01fd\3\2\2\2\u01fd\u01ff\3\2\2\2\u01fe\u01fc"+
		"\3\2\2\2\u01ff\u0200\bG\2\2\u0200\u008e\3\2\2\2\27\2\u00a2\u00a6\u00ab"+
		"\u00af\u00b4\u00b6\u00bb\u00c3\u00c5\u00cb\u00cd\u00d5\u00d7\u00db\u01a4"+
		"\u01ad\u01b3\u01ba\u01f4\u01fc\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}